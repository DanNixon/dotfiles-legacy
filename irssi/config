servers = (
  {
    address = "irc.freenode.net";
    chatnet = "FreeNode";
    port = "8001";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "yes";
  }
);

chatnets = { FreeNode = { type = "IRC"; nick = "dannixon"; }; };

channels = (
  { name = "#makerspace"; chatnet = "FreeNode"; autojoin = "yes"; },
  { name = "#ubuntu"; chatnet = "FreeNode"; autojoin = "yes"; },
  { name = "##linux"; chatnet = "FreeNode"; autojoin = "yes"; },
  { name = "#arduino"; chatnet = "FreeNode"; autojoin = "yes"; },
  { name = "#vim"; chatnet = "FreeNode"; },
  { name = "#git"; chatnet = "FreeNode"; },
  { name = "#python"; chatnet = "FreeNode"; },
  { name = "#touhou"; chatnet = "FreeNode"; },
  { name = "#gmusicapi"; chatnet = "FreeNode"; }
  { name = "#fish"; chatnet = "FreeNode"; }
  { name = "#opencv"; chatnet = "FreeNode"; },
  { name = "#ffmpeg"; chatnet = "FreeNode"; },
  { name = "#reprap"; chatnet = "FreeNode"; },
);

aliases = {
  I = "msg NickServ identify";
  Q = "window close";
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  P = "part";
  LEAVE = "part";
  C = "window close";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};

settings = {
  core = {
    real_name = "Dan Nixon";
    user_name = "dannixon";
    nick = "dannixon";
    quit_message = "Leaving IRC for now...";
  };
  "fe-text" = { actlist_sort = "refnum"; };
  "fe-common/core" = { theme = "murf"; autolog = "yes"; };
  "irc/core" = { part_message = "Leaving this channel for now..."; };
};

logs = { };
